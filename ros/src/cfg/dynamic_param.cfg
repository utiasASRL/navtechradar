#! /usr/bin/env python

PACKAGE='nav_ross'


from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
gen.add("Phi",    double_t,   0,    "3D angle",    0,  0,   360)
gen.add("ThreeDScanApp",   bool_t,   0, "Publish 3dpcl",  False)

gen.add("maxangle",    int_t,   0,    "max angle for radar",    69,  0,   180)
gen.add("LaserScan2_Map",   bool_t,   0, "Publish Laser scan",  False)
gen.add("radarimage",   bool_t,   0, "Enable radarimage",  False)
gen.add("radarimageprocessing",   bool_t,   0, "Enable radarimage processing",  False)
gen.add("threshold_value",    int_t,   0, "Threshold parameter1",    62,  0,   255)
gen.add("pointcloud",   bool_t,   0, "Enable pointcloud postprocessing",  False)
gen.add("pcl_threshold_value",    int_t,   0, "pcl Threshold parameter1",    62,  0,   255)
gen.add("boundingboxes2",   bool_t,   0, "Enable bounding boxes 2 postprocessing",  False)
gen.add("MinAreaRect",   bool_t,   0, "Highlight Objects with Min Area Rectangles",  False)
gen.add("longtermaverage",   bool_t,   0, "static radar for long term averaging",  False)
gen.add("dilation_value",    int_t,   0,    "dilation_value",    2,  0,   20)
gen.add("gaussian_value",    int_t,   0,    "gaussian_value",    5,  0,   15)
gen.add("adaptive_threshold",   bool_t,   0, "Enable adaptive thresholding",  False)
gen.add("level_above_average",   int_t,   0, "Level above the average to determine point",  52, 0, 100)
gen.add("adaptive_size",   int_t,   0, "size of calculated mean search area",  5,0,15)
gen.add("grid",   bool_t,   0, "Enable grid",  False)
gen.add("grid_stepSize",    int_t,   0,    "grid step size",    10,  0,   1000)
gen.add("grid_opacity",    double_t,   0, "grid opacity",    0.5,  0,   1)
gen.add("colormap",    int_t,   0, "colormap profile",    10,  0,   10)

exit(gen.generate(PACKAGE, "dynamic_reconfigure_node", "dynamic_param"))
